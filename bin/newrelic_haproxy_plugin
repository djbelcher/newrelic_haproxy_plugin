#!/usr/bin/env ruby
$stdout.sync = true

$LOAD_PATH.unshift File.expand_path '../../lib', __FILE__
require 'plugin_agent'
require 'optparse'

NewRelic::Plugin::Config.config_file = '/etc/newrelic/newrelic_haproxy_plugin.yml'

options = OptionParser.new do |opts|
  opts.banner = <<-EOF
Usage:
  newrelic_haproxy_plugin ( run | install ) [options]
  EOF

  opts.on('-v', '--verbose', 'Run verbosely') do
    NewRelic::Plugin::Config.config.newrelic['verbose'] = 1
  end

  opts.on('-c', '--config FILE',
          'Override the location of the newrelic_plugin.yml') do |filename|
    unless File.exist? filename
      puts "File not found: #{filename.inspect}"
      exit 1
    end
    NewRelic::Plugin::Config.config_file = filename
  end

  opts.on('-h', '--help') do
    puts opts
    exit 0 if File.basename($PROGRAM_NAME) == File.basename(__FILE__)
  end

end

args = options.parse!(ARGV)

if args.first == 'run'
  unless File.exist? NewRelic::Plugin::Config.config_file
    puts "Plugin configuration file not found: #{NewRelic::Plugin::Config.config_file.inspect}"
    puts "Run 'sudo newrelic_haproxy_plugin install' for setup config"
    exit 1
  end
  PluginAgent.run
elsif args.first == 'install'
  config_file = File.read(File.expand_path('../../config/newrelic_haproxy_plugin.yml', __FILE__))

  require 'fileutils'
  FileUtils.mkdir_p '/etc/newrelic'
  File.open('/etc/newrelic/newrelic_haproxy_plugin.yml', 'w') do |io|
    io.write(config_file)
  end
  puts "Saved plugin configuration file #{File.expand_path('/etc/newrelic/newrelic_haproxy_plugin.yml')}"
else
  puts options
end